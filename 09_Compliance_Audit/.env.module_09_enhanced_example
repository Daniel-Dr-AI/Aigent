# ============================================================================
# Aigent Module 09 - Enhanced Compliance & Audit Logging
# Environment Variables Template
# Version: 1.1.0-enhanced
# PHI Level: NONE (Masked/Logged)
# ============================================================================
#
# ⚠️ SECURITY WARNING: This module logs all system activity
# All configuration must comply with HIPAA audit trail requirements
#
# INSTRUCTIONS:
# 1. Copy this file to your n8n environment configuration
# 2. Replace all placeholder values with your actual credentials/settings
# 3. NEVER commit the actual .env file to version control
# 4. Use encrypted storage for all credentials
# 5. Enable audit logging for all PHI access
# 6. Implement tamper detection with hash chain verification
#
# ============================================================================

# ----------------------------------------------------------------------------
# CORE WEBHOOK CONFIGURATION
# ----------------------------------------------------------------------------

# Webhook unique identifier
WEBHOOK_ID_MODULE_09=aigent-audit-log-v1

# CORS allowed origins (restrictive for security)
# Production: MUST specify exact domains (never use *)
ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# ----------------------------------------------------------------------------
# PRIMARY STORAGE BACKEND
# ----------------------------------------------------------------------------

# Primary storage system
# Options: postgres, sheets, airtable
# Recommendation: postgres for production (ACID compliance, performance)
LOG_PRIMARY=postgres

# ----------------------------------------------------------------------------
# POSTGRESQL CONFIGURATION (Recommended for Production)
# ----------------------------------------------------------------------------

# PostgreSQL Credential ID (from n8n Credentials page)
POSTGRES_CREDENTIAL_ID=15

# PostgreSQL Credential Name (must match)
POSTGRES_CREDENTIAL_NAME=PostgreSQL Audit Database

# Database connection string (alternative to credential)
# Format: postgresql://user:password@host:port/database
# PG_CONN_STRING=postgresql://audit_user:secure_pass@localhost:5432/audit_db

# Table name for audit records
PG_TABLE=audit_log

# Connection pool settings
PG_MAX_CONNECTIONS=20
PG_IDLE_TIMEOUT_MS=30000

# Query timeout (milliseconds)
PG_QUERY_TIMEOUT_MS=10000

# Enable SSL/TLS for database connection (production: true)
PG_SSL_ENABLED=true

# ⚠️ PRODUCTION CHECKLIST - PostgreSQL:
# [ ] Database created: createdb audit_db
# [ ] User created with restricted permissions
# [ ] Table schema created (see README SQL)
# [ ] Indexes created for performance (ts, module, event, severity, actor_id, resource_id, trace_id, record_hash)
# [ ] JSONB index created for payload queries (GIN index)
# [ ] Regular backups configured (pg_dump or continuous archiving)
# [ ] Monitoring enabled (slow queries, connection pool)
# [ ] SSL/TLS enforced for connections

# ----------------------------------------------------------------------------
# GOOGLE SHEETS CONFIGURATION (Lightweight Alternative)
# ----------------------------------------------------------------------------

# Google Sheets Credential ID
GOOGLE_SHEETS_CREDENTIAL_ID=6

# Google Sheets Credential Name
GOOGLE_SHEETS_CREDENTIAL_NAME=Google Sheets OAuth Audit

# Spreadsheet ID (from Google Sheets URL)
# https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/edit
GOOGLE_SHEET_ID=your-spreadsheet-id-here

# Sheet tab name for audit logs
GOOGLE_SHEET_TAB_AUDIT=AuditLog

# ⚠️ LIMITATIONS - Google Sheets:
# - Maximum ~10,000 records (performance degrades)
# - No ACID transactions (potential data loss on failures)
# - No advanced querying (limited filtering)
# - Restricted access via Google permissions (good)
# - Use ONLY for development or very low-volume clinics

# ----------------------------------------------------------------------------
# AIRTABLE CONFIGURATION (Medium Volume Alternative)
# ----------------------------------------------------------------------------

# Airtable Credential ID
AIRTABLE_CREDENTIAL_ID=16

# Airtable Credential Name
AIRTABLE_CREDENTIAL_NAME=Airtable Audit PAT

# Airtable Base ID
AIRTABLE_BASE_ID=your-airtable-base-id

# Airtable Table Name
AIRTABLE_TABLE_NAME=AuditLog

# ⚠️ LIMITATIONS - Airtable:
# - ~100,000 records per base (paid plan)
# - Rate limits: 5 requests/second
# - Limited query performance vs PostgreSQL
# - Good for teams needing visual interface

# ----------------------------------------------------------------------------
# SECONDARY ARCHIVE (Cold Storage)
# ----------------------------------------------------------------------------

# Secondary storage for immutable append-only logs
# Options: s3, none
# Recommendation: s3 for production (tamper-proof, queryable via Athena)
LOG_SECONDARY=s3

# AWS S3 Configuration
AWS_CREDENTIAL_ID=17
S3_BUCKET=aigent-audit-archive
S3_REGION=us-east-1

# S3 partition path format (automatic time-based partitioning)
# Pattern: audit/YYYY/MM/DD/HH/audit.jsonl
S3_PARTITION_BY=hour

# Enable S3 server-side encryption (AES256 or aws:kms)
S3_ENCRYPTION=AES256

# S3 KMS Key ID (if using aws:kms encryption)
# S3_KMS_KEY_ID=arn:aws:kms:us-east-1:123456789012:key/abc-123

# Enable S3 versioning (protects against accidental deletion)
S3_VERSIONING_ENABLED=true

# S3 lifecycle policy (move to Glacier after X days)
S3_GLACIER_TRANSITION_DAYS=365

# Signed URL expiration (seconds)
# Default: 600 seconds (10 minutes)
S3_SIGNED_URL_EXPIRY=600

# Dead Letter Queue (DLQ) bucket for failed events
S3_DLQ_BUCKET=aigent-audit-dlq

# ⚠️ PRODUCTION CHECKLIST - S3:
# [ ] S3 bucket created with private ACL
# [ ] Bucket encryption enabled (AES256 or KMS)
# [ ] Versioning enabled (protects against deletion/tampering)
# [ ] Lifecycle policy configured (Glacier transition)
# [ ] IAM user created with minimal permissions (PutObject, GetObject only)
# [ ] Bucket policy blocks public access
# [ ] MFA delete enabled (prevents unauthorized deletion)
# [ ] CloudTrail logging enabled (audit S3 API calls)

# ----------------------------------------------------------------------------
# HASH CHAIN CONFIGURATION (Tamper Detection)
# ----------------------------------------------------------------------------

# Last hash from most recent audit record
# IMPORTANT: This should be dynamically updated after each insertion
# In production, query database for: SELECT record_hash FROM audit_log ORDER BY ts DESC LIMIT 1
# Use GENESIS hash (all zeros) for first record
AUDIT_LAST_HASH=0000000000000000000000000000000000000000000000000000000000000000

# Hash algorithm (fixed to SHA-256)
HASH_ALGORITHM=SHA-256

# Enable hash chain verification on startup (verifies entire chain)
VERIFY_CHAIN_ON_STARTUP=false

# Hash chain verification schedule (cron format)
# Example: 0 3 * * * (daily at 3 AM)
# HASH_CHAIN_VERIFICATION_SCHEDULE=0 3 * * *

# Alert on hash chain break detection
ALERT_ON_HASH_CHAIN_BREAK=true

# ⚠️ TAMPER DETECTION:
# Hash chain provides cryptographic proof of record integrity
# If ANY record is modified/deleted, verification will detect it
# See README for verification SQL queries

# ----------------------------------------------------------------------------
# PHI MASKING CONFIGURATION (HIPAA Critical)
# ----------------------------------------------------------------------------

# Enable PHI masking in logs
# Default: true (HIPAA best practice - minimize PHI exposure)
ENABLE_PHI_MASKING=true

# Mask email addresses (local part only)
# john.doe@example.com → j***@example.com
MASK_EMAIL_LOCAL=true

# Mask IP addresses (preserve network portion)
# 203.0.113.42 → 203.0.113.***
MASK_IP=true

# Mask ID fields (preserve last N digits)
# 0 = complete redaction, 4 = preserve last 4 digits
# patient_123456789 → ***6789
MASK_ID_LAST_DIGITS=4

# Complete redaction keywords (case-insensitive)
# Fields containing these keywords are replaced with [REDACTED]
REDACT_KEYWORDS=ssn,password,token,secret,credit_card,cvv,api_key

# ⚠️ PHI MASKING STRATEGY:
# Level 1 (MASK_ID_LAST_DIGITS=4): Preserve last 4 for support correlation
# Level 2 (MASK_ID_LAST_DIGITS=2): Preserve last 2 for minimal correlation
# Level 3 (MASK_ID_LAST_DIGITS=0): Complete redaction (highest security)
#
# RECOMMENDATION: Level 1 (last 4 digits) balances security and usability

# ----------------------------------------------------------------------------
# DATA RETENTION POLICY
# ----------------------------------------------------------------------------

# Data retention period (days)
# HIPAA: Minimum 6 years (2190 days)
# Financial: 7 years (2555 days) recommended
DATA_RETENTION_DAYS=2555

# Auto-delete expired records
# WARNING: Only enable if you have reliable backups
AUTO_DELETE_EXPIRED=false

# Retention policy enforcement schedule (cron format)
# Example: 0 2 * * 0 (weekly on Sunday at 2 AM)
RETENTION_ENFORCEMENT_SCHEDULE=0 2 * * 0

# Alert before expiration (days)
ALERT_BEFORE_EXPIRATION_DAYS=30

# ⚠️ RETENTION COMPLIANCE:
# HIPAA: 6 years from date of creation or last use
# IRS: 7 years for financial records
# State laws may require longer retention
# Consult legal counsel for your jurisdiction

# ----------------------------------------------------------------------------
# ALERT CONFIGURATION
# ----------------------------------------------------------------------------

# Enable alerting
ENABLE_ALERTS=true

# Alert on these severity levels (comma-separated)
# Options: info, warning, high, critical
ALERT_SEVERITY=warning,high,critical

# Always alert on these events (regardless of severity)
# Comma-separated list of event names
WATCH_EVENTS=document_export,bulk_download,login_failure,phi_access,mass_delete,config_change

# After-hours monitoring window
# PHI access outside business hours triggers alert
AFTER_HOURS_START=18:00
AFTER_HOURS_END=08:00
TIMEZONE=America/New_York

# Slack webhook for alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T.../B.../XXX...

# Email alert recipients (comma-separated)
ALERT_EMAIL=security@yourclinic.com,compliance@yourclinic.com

# Alert rate limiting (max alerts per hour)
# Prevents alert fatigue
ALERT_RATE_LIMIT=10

# Alert cooldown period (seconds)
# Minimum time between similar alerts
ALERT_COOLDOWN_SECONDS=300

# ⚠️ ALERT BEST PRACTICES:
# - Test alert delivery before production (use test events)
# - Monitor alert volume (tune WATCH_EVENTS if too noisy)
# - Establish on-call rotation for critical alerts
# - Document response procedures for each alert type
# - Review alerts weekly for false positives

# ----------------------------------------------------------------------------
# SLACK INTEGRATION
# ----------------------------------------------------------------------------

# Slack Credential ID (for OAuth apps)
SLACK_CREDENTIAL_ID=18

# Slack channel for audit alerts
SLACK_CHANNEL=#security-alerts

# Slack username for bot
SLACK_USERNAME=Aigent Audit Bot

# Slack icon emoji
SLACK_ICON_EMOJI=:shield:

# ⚠️ SLACK SETUP:
# 1. Create Slack app: https://api.slack.com/apps
# 2. Enable Incoming Webhooks
# 3. Add webhook to workspace
# 4. Copy webhook URL to SLACK_WEBHOOK_URL
# 5. Test with: curl -X POST -H 'Content-type: application/json' --data '{"text":"Test"}' $SLACK_WEBHOOK_URL

# ----------------------------------------------------------------------------
# EMAIL NOTIFICATIONS (SendGrid)
# ----------------------------------------------------------------------------

# SendGrid Credential ID
SENDGRID_CREDENTIAL_ID=11

# SendGrid Credential Name
SENDGRID_CREDENTIAL_NAME=SendGrid Audit Alerts

# SendGrid from email
SENDGRID_FROM_EMAIL=audit-alerts@yourclinic.com

# SendGrid from name
SENDGRID_FROM_NAME=Aigent Audit System

# Email retry configuration
EMAIL_RETRY_COUNT=2
EMAIL_RETRY_DELAY_MS=500

# ⚠️ EMAIL COMPLIANCE:
# Ensure SendGrid account has BAA signed for HIPAA compliance
# https://sendgrid.com/resource/sendgrid-hipaa-compliance/

# ----------------------------------------------------------------------------
# INTEGRATION WITH OTHER MODULES
# ----------------------------------------------------------------------------

# Module webhook URLs (for event ingestion)
# All modules should POST audit events to Module 09

MODULE_01_NAME=Module_01_Intake_Lead_Capture
MODULE_02_NAME=Module_02_Consult_Booking
MODULE_03_NAME=Module_03_Telehealth_Session
MODULE_04_NAME=Module_04_Billing_Payments
MODULE_05_NAME=Module_05_Followup_Retention
MODULE_06_NAME=Module_06_Document_Capture_OCR
MODULE_07_NAME=Module_07_Analytics_Dashboard
MODULE_08_NAME=Module_08_Messaging_Omnichannel

# Module 09 ingestion endpoint (for other modules to call)
MODULE_09_WEBHOOK_URL=https://n8n.yourclinic.com/webhook/aigent-audit-log

# ⚠️ INTEGRATION PATTERN:
# Each module should POST audit events after critical operations:
# - Module 01: lead_created, lead_updated, lead_deleted
# - Module 02: booking_created, booking_cancelled, booking_rescheduled
# - Module 03: session_started, session_ended, session_recording_accessed
# - Module 04: payment_processed, payment_failed, refund_issued
# - Module 05: email_sent, sms_sent, campaign_unsubscribe
# - Module 06: document_uploaded, document_accessed, document_exported
# - Module 07: report_generated, data_aggregated
# - Module 08: message_received, message_sent, phi_content_detected

# ----------------------------------------------------------------------------
# OBSERVABILITY & MONITORING
# ----------------------------------------------------------------------------

# Enable debug mode
DEBUG_MODE=false

# Save execution data
SAVE_EXECUTION_DATA=all

# Support email
SUPPORT_EMAIL=support@yourclinic.com

# Workflow version
WORKFLOW_VERSION=1.1.0-enhanced

# Enable performance tracking
ENABLE_PERFORMANCE_TRACKING=true

# Performance thresholds (milliseconds)
PERFORMANCE_FAST_THRESHOLD=500
PERFORMANCE_SLOW_THRESHOLD=2000

# Target execution time (milliseconds)
# Module 09 target: <1000ms (P95)
TARGET_EXECUTION_TIME_MS=1000

# ⚠️ MONITORING METRICS:
# Track these KPIs:
# - Ingestion rate (events/second)
# - P50/P95/P99 latency
# - Error rate (%)
# - Storage backend health
# - Hash chain verification status
# - Alert delivery success rate

# ----------------------------------------------------------------------------
# SECURITY & COMPLIANCE (HIPAA CRITICAL)
# ----------------------------------------------------------------------------

# HIPAA mode (enables strict security checks)
HIPAA_MODE=true

# Audit log immutability
# Once written, records should NEVER be modified
ENFORCE_IMMUTABILITY=true

# Enable audit trail for audit system itself (meta-auditing)
AUDIT_THE_AUDITOR=true

# Encryption at rest
# All stored audit records must be encrypted
ENABLE_ENCRYPTION_AT_REST=true

# Encryption key rotation (days)
# Recommended: 90 days
ENCRYPTION_KEY_ROTATION_DAYS=90

# Access control logging
# Log all access to audit records (who queries the audit log)
LOG_AUDIT_ACCESS=true

# Audit log backup schedule (cron format)
# Example: 0 1 * * * (daily at 1 AM)
AUDIT_BACKUP_SCHEDULE=0 1 * * *

# Backup retention (days)
BACKUP_RETENTION_DAYS=2555

# Enable breach detection (anomaly detection)
# Monitors for unusual patterns (sudden spike in exports, off-hours access)
ENABLE_BREACH_DETECTION=false

# ⚠️ HIPAA SECURITY RULE REQUIREMENTS:
# § 164.308(a)(1)(ii)(D): Audit Controls
# - Log all PHI access (creation, modification, access, deletion)
# - Include: date, time, user, action, resource
# - Implement regular audit log review
#
# § 164.312(b): Audit Controls (Technical Safeguards)
# - Hardware, software, and procedural mechanisms to record and examine activity
# - Implement tamper detection (hash chain)
# - Maintain audit logs for required retention period

# ----------------------------------------------------------------------------
# PERFORMANCE TUNING
# ----------------------------------------------------------------------------

# Workflow execution timeout (milliseconds)
# Audit logging should complete quickly
WORKFLOW_TIMEOUT_MS=30000

# Maximum parallel executions
# Audit logs can process concurrently
MAX_PARALLEL_EXECUTIONS=10

# API timeout configurations (milliseconds)
POSTGRES_API_TIMEOUT_MS=10000
S3_API_TIMEOUT_MS=15000
SHEETS_API_TIMEOUT_MS=5000
AIRTABLE_API_TIMEOUT_MS=5000
SLACK_API_TIMEOUT_MS=3000
EMAIL_API_TIMEOUT_MS=5000

# Retry configuration
STORAGE_RETRY_COUNT=2
STORAGE_RETRY_DELAY_MS=2000
ALERT_RETRY_COUNT=2
ALERT_RETRY_DELAY_MS=500

# Batch insert size (for high-volume scenarios)
# Process multiple audit events in single database transaction
BATCH_INSERT_SIZE=1
BATCH_INSERT_TIMEOUT_MS=5000

# ⚠️ PERFORMANCE OPTIMIZATION:
# For high-volume clinics (>1000 events/day):
# 1. Use PostgreSQL with connection pooling
# 2. Enable batch inserts (BATCH_INSERT_SIZE=10)
# 3. Partition tables by month (improves query performance)
# 4. Use TimescaleDB extension (hypertables for time-series data)
# 5. Archive old records to cold storage (S3 Glacier)

# ----------------------------------------------------------------------------
# N8N INSTANCE CONFIGURATION
# ----------------------------------------------------------------------------

# n8n instance identifier
N8N_INSTANCE_ID=production-001

# Timezone for timestamps
TZ=America/New_York

# Environment
NODE_ENV=production

# ----------------------------------------------------------------------------
# ADVANCED FEATURES (Optional)
# ----------------------------------------------------------------------------

# Enable query API (allows external systems to query audit logs)
ENABLE_QUERY_API=false

# Query API authentication
# QUERY_API_KEY=your-secure-api-key

# Enable real-time audit stream (WebSocket)
ENABLE_AUDIT_STREAM=false

# Audit stream port
# AUDIT_STREAM_PORT=8080

# Enable compliance report generation
ENABLE_COMPLIANCE_REPORTS=false

# Compliance report schedule (cron format)
# Example: 0 9 1 * * (monthly on 1st at 9 AM)
# COMPLIANCE_REPORT_SCHEDULE=0 9 1 * *

# Compliance report recipients
# COMPLIANCE_REPORT_RECIPIENTS=compliance@yourclinic.com

# ============================================================================
# END OF CONFIGURATION
# ============================================================================
#
# SECURITY CHECKLIST:
# [ ] Primary storage backend configured and tested
# [ ] Secondary archive (S3) configured with encryption
# [ ] PHI masking enabled (ENABLE_PHI_MASKING=true)
# [ ] Hash chain initialized (AUDIT_LAST_HASH set or queried)
# [ ] Data retention policy defined (DATA_RETENTION_DAYS)
# [ ] Alerts configured (Slack webhook, email recipients)
# [ ] Watch events defined (document_export, bulk_download, etc.)
# [ ] After-hours monitoring enabled
# [ ] All service providers have signed BAAs
# [ ] Access controls configured (restrict who can query audit logs)
# [ ] Backup schedule configured
# [ ] Monitoring enabled (performance metrics, error rates)
# [ ] Hash chain verification tested
# [ ] Alert delivery tested (Slack, email)
# [ ] DLQ configured for failed events
#
# HIPAA COMPLIANCE CHECKLIST:
# [ ] Audit controls implemented (§ 164.308(a)(1)(ii)(D))
# [ ] All PHI access logged (creation, read, update, delete)
# [ ] Audit logs include: date, time, user, action, resource
# [ ] Tamper detection enabled (hash chain)
# [ ] Audit logs retained for required period (6+ years)
# [ ] Audit log access restricted (role-based access control)
# [ ] Encryption at rest enabled
# [ ] Encryption in transit enabled (HTTPS, TLS)
# [ ] Regular audit log review process documented
# [ ] Breach notification plan includes audit log review
# [ ] Audit logs protected from unauthorized modification/deletion
#
# TESTING CHECKLIST:
# [ ] Test audit event ingestion (valid event)
# [ ] Test validation errors (missing fields, invalid formats)
# [ ] Test PHI masking (verify email, IP, ID masking)
# [ ] Test primary storage (PostgreSQL/Sheets/Airtable)
# [ ] Test secondary archive (S3 JSONL append)
# [ ] Test hash chain calculation (verify record_hash computation)
# [ ] Test alert delivery (severity threshold, watch events, after-hours)
# [ ] Test error handling (DLQ entry creation)
# [ ] Test with different severity levels (info, warning, high, critical)
# [ ] Test with different event types from each module
# [ ] Test hash chain verification (SQL query)
# [ ] Verify no PHI in alerts (masked IDs, IPs, emails)
# [ ] Test signed URL generation (S3 archive access)
# [ ] Test concurrent event ingestion (load testing)
# [ ] Test retention policy enforcement (query expired records)
#
# MONITORING CHECKLIST:
# [ ] Monitor ingestion rate (events/second)
# [ ] Monitor execution time (<1000ms P95)
# [ ] Monitor success rate (>99%)
# [ ] Monitor storage backend health (connections, errors)
# [ ] Monitor S3 archive write success
# [ ] Monitor alert delivery rate
# [ ] Monitor hash chain integrity (weekly verification)
# [ ] Monitor DLQ size (failed events)
# [ ] Monitor after-hours PHI access alerts
# [ ] Track alert volume (tune watch events if too noisy)
# [ ] Review audit logs for suspicious patterns
# [ ] Verify backups are running successfully
#
# OPERATIONAL CHECKLIST:
# [ ] Establish audit log review schedule (weekly minimum)
# [ ] Document response procedures for each alert type
# [ ] Define on-call rotation for critical alerts
# [ ] Train staff on audit log queries (compliance investigations)
# [ ] Document breach response procedures
# [ ] Schedule regular hash chain verification
# [ ] Schedule compliance report generation (monthly)
# [ ] Document audit log retention and disposal procedures
# [ ] Review and update watch events quarterly
# [ ] Test disaster recovery (restore from S3 archive)
#
# For support: support@aigent.company
# Documentation: https://docs.aigent.company/templates/module-09-enhanced
# HIPAA Audit Controls: https://www.hhs.gov/hipaa/for-professionals/security/laws-regulations/index.html
# ============================================================================
