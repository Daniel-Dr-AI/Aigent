{
  "name": "Aigent_Module_03_Telehealth_Session",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "telehealth-session",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "={{$env.ALLOWED_ORIGINS || '*'}}",
          "rawBody": false
        }
      },
      "id": "webhook-trigger-301",
      "name": "Webhook Trigger - Appointment Confirmed",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 300],
      "webhookId": "{{$env.WEBHOOK_ID_TELEHEALTH}}",
      "notes": "PURPOSE: Accept confirmed appointment data from Module 02 or manual trigger.\nINPUTS: appointment_status.json with appointment_id, patient details, scheduled_time.\nOUTPUTS: Parsed body as $json.\nCONFIG: Set ALLOWED_ORIGINS for CORS, WEBHOOK_ID_TELEHEALTH for custom path.\nINTEGRATION: Connects to Module 02 success response or standalone telehealth scheduler.\nSECURITY: Validates origin to prevent unauthorized session creation."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "validation-appointment-confirmed",
              "leftValue": "={{ $json.body.appointment_confirmed !== false }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            },
            {
              "id": "validation-appointment-id",
              "leftValue": "={{ $json.body.appointment_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "validation-patient-email",
              "leftValue": "={{ $json.body.patient_email }}",
              "rightValue": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            },
            {
              "id": "validation-scheduled-time",
              "leftValue": "={{ $json.body.scheduled_time }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validation-node-302",
      "name": "Validate Appointment Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [450, 300],
      "notes": "PURPOSE: Ensure appointment is confirmed and required data present before creating telehealth session.\nINPUTS: Webhook body with appointment confirmation status and details.\nOUTPUTS: Routes to 'true' if appointment confirmed and valid, 'false' if not ready.\nVALIDATION: Checks appointment_confirmed != false, appointment_id exists, valid email, scheduled_time present.\nBUSINESS LOGIC: Prevents telehealth session creation for cancelled or unconfirmed appointments."
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Appointment not confirmed or missing required data\", \"message\": \"Cannot create telehealth session for unconfirmed appointment. Required: appointment_id, patient_email, scheduled_time, appointment_confirmed=true\", \"timestamp\": $now.toISO() } }}",
        "options": {
          "responseCode": 400,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "error-response-303",
      "name": "Return Validation Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [650, 450],
      "notes": "PURPOSE: Return 400 error when appointment not confirmed or data incomplete.\nINPUTS: Triggered by validation failure.\nOUTPUTS: HTTP 400 with error JSON explaining requirements.\nERROR HANDLING: Clear message to upstream system about why session wasn't created.\nSECURITY: Prevents unauthorized or premature session generation."
    },
    {
      "parameters": {
        "jsCode": "// Generate unique session ID and prepare telehealth platform request\nconst appointmentId = $input.first().json.body.appointment_id;\nconst scheduledTime = $input.first().json.body.scheduled_time;\nconst patientName = $input.first().json.body.patient_name || 'Patient';\nconst patientEmail = $input.first().json.body.patient_email;\nconst providerName = $input.first().json.body.provider_name || $env.DEFAULT_PROVIDER_NAME || 'Provider';\nconst serviceType = $input.first().json.body.service_type || 'Telehealth Consultation';\n\n// Generate unique session identifier\nconst sessionId = `${$env.CLINIC_ID || 'clinic'}_${appointmentId}_${Date.now()}`;\n\n// Calculate session duration (from env or default 30 minutes)\nconst duration = parseInt($env.DEFAULT_SESSION_DURATION) || 30;\n\n// Calculate start time (scheduled appointment time)\nconst startTime = DateTime.fromISO(scheduledTime);\n\n// Session metadata\nconst sessionData = {\n  session_id: sessionId,\n  appointment_id: appointmentId,\n  topic: `${serviceType} - ${patientName}`,\n  start_time: startTime.toISO(),\n  duration: duration,\n  timezone: $env.CLINIC_TIMEZONE || 'America/New_York',\n  patient: {\n    name: patientName,\n    email: patientEmail\n  },\n  provider: {\n    name: providerName,\n    email: $env.PROVIDER_EMAIL || $env.CLINIC_EMAIL\n  },\n  settings: {\n    waiting_room: $env.ENABLE_WAITING_ROOM === 'true',\n    recording: $env.ENABLE_AUTO_RECORDING === 'true',\n    join_before_host: $env.ALLOW_JOIN_BEFORE_HOST === 'true',\n    password_required: $env.REQUIRE_SESSION_PASSWORD === 'true'\n  }\n};\n\nreturn sessionData;"
      },
      "id": "prepare-session-304",
      "name": "Prepare Session Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300],
      "notes": "PURPOSE: Generate unique session ID and prepare data structure for telehealth platform API.\nINPUTS: Validated appointment data from webhook.\nOUTPUTS: Structured session object with ID, times, participants, settings.\nLOGIC: Creates session_id from clinic_id + appointment_id + timestamp for uniqueness.\nCONFIG: Uses env vars for duration, timezone, security settings (waiting room, recording, password).\nCUSTOMIZATION: Modify settings logic for clinic-specific requirements (e.g., always record, no waiting room)."
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "method": "POST",
        "url": "={{$env.TELEHEALTH_API_BASE_URL}}/meetings",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "topic",
              "value": "={{ $json.topic }}"
            },
            {
              "name": "type",
              "value": "={{ $env.TELEHEALTH_MEETING_TYPE || '2' }}"
            },
            {
              "name": "start_time",
              "value": "={{ $json.start_time }}"
            },
            {
              "name": "duration",
              "value": "={{ $json.duration }}"
            },
            {
              "name": "timezone",
              "value": "={{ $json.timezone }}"
            },
            {
              "name": "agenda",
              "value": "={{ $json.topic }}"
            },
            {
              "name": "settings",
              "value": "={{ {\n  waiting_room: $json.settings.waiting_room,\n  join_before_host: $json.settings.join_before_host,\n  auto_recording: $json.settings.recording ? 'cloud' : 'none',\n  mute_upon_entry: true,\n  approval_type: 2,\n  meeting_authentication: false,\n  encryption_type: 'enhanced_encryption'\n} }}"
            }
          ]
        },
        "options": {
          "timeout": 15000,
          "redirect": {
            "redirect": {
              "followRedirects": true
            }
          }
        }
      },
      "id": "create-session-305",
      "name": "Create Telehealth Session",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 300],
      "credentials": {
        "oAuth2Api": {
          "id": "={{$env.TELEHEALTH_CREDENTIAL_ID}}",
          "name": "={{$env.TELEHEALTH_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Create secure telehealth session in platform (Zoom/Doxy.me/Amwell).\nINPUTS: Prepared session data with topic, time, duration, participants.\nOUTPUTS: Session object with join URLs, meeting ID, password (if enabled).\nPLATFORMS: \n  - Zoom for Healthcare: POST /meetings (OAuth2)\n  - Doxy.me: POST /api/v1/rooms (API key)\n  - Amwell: POST /visits (OAuth2)\nSECURITY: Enhanced encryption, waiting room, approval type 2 (manual admit).\nTIMEOUT: 15s for API response.\nALTERNATES: Swap for platform-specific node or custom API integration."
    },
    {
      "parameters": {
        "jsCode": "// Extract session URLs and format for patient/provider\nconst response = $input.first().json;\nconst sessionData = $('Prepare Session Data').first().json;\n\n// Platform-specific URL extraction\nlet sessionLink, hostLink, sessionPassword;\n\nif ($env.TELEHEALTH_PROVIDER_NAME === 'Zoom') {\n  sessionLink = response.join_url;\n  hostLink = response.start_url;\n  sessionPassword = response.password || null;\n} else if ($env.TELEHEALTH_PROVIDER_NAME === 'Doxy.me') {\n  sessionLink = `https://doxy.me/${response.room_name}`;\n  hostLink = `https://doxy.me/${response.room_name}?provider=true`;\n  sessionPassword = response.pin || null;\n} else if ($env.TELEHEALTH_PROVIDER_NAME === 'Amwell') {\n  sessionLink = response.patient_url;\n  hostLink = response.provider_url;\n  sessionPassword = null; // Amwell uses token-based auth\n} else {\n  // Generic fallback\n  sessionLink = response.join_url || response.patient_url || response.url;\n  hostLink = response.start_url || response.provider_url || response.host_url;\n  sessionPassword = response.password || response.pin || null;\n}\n\n// Format response\nreturn {\n  session_id: sessionData.session_id,\n  appointment_id: sessionData.appointment_id,\n  platform_meeting_id: response.id || response.meeting_id || response.visit_id,\n  session_link: sessionLink,\n  host_link: hostLink,\n  session_password: sessionPassword,\n  scheduled_time: sessionData.start_time,\n  duration: sessionData.duration,\n  patient_email: sessionData.patient.email,\n  patient_name: sessionData.patient.name,\n  provider_name: sessionData.provider.name,\n  provider_email: sessionData.provider.email,\n  provider: $env.TELEHEALTH_PROVIDER_NAME || 'Telehealth Platform',\n  created_at: new Date().toISOString()\n};"
      },
      "id": "format-session-306",
      "name": "Format Session Links",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 300],
      "notes": "PURPOSE: Extract and normalize session URLs across different telehealth platforms.\nINPUTS: Platform API response with meeting/room/visit details.\nOUTPUTS: Standardized session object with patient_link, provider_link, password.\nPLATFORM LOGIC:\n  - Zoom: join_url (patient), start_url (host), password\n  - Doxy.me: doxy.me/room_name, ?provider=true for host, PIN\n  - Amwell: patient_url, provider_url, token-based\nCUSTOMIZATION: Add logic for additional platforms or custom telehealth systems.\nSECURITY: Separates patient and provider links with different permissions."
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $('Webhook Trigger - Appointment Confirmed').first().json.body.contact_id }}",
        "updateFields": {
          "telehealth_status": "SCHEDULED",
          "telehealth_link": "={{ $json.session_link }}",
          "telehealth_session_id": "={{ $json.session_id }}",
          "telehealth_platform": "={{ $json.provider }}",
          "telehealth_scheduled_time": "={{ $json.scheduled_time }}",
          "last_telehealth_update": "={{ $now.toISO() }}",
          "appointment_status": "TELEHEALTH_READY"
        },
        "options": {}
      },
      "id": "crm-update-307",
      "name": "Update CRM with Session Details",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [1250, 200],
      "credentials": {
        "hubspotApi": {
          "id": "{{$env.HUBSPOT_CREDENTIAL_ID}}",
          "name": "{{$env.HUBSPOT_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Update CRM contact with telehealth session details and status.\nINPUTS: Formatted session data + contact_id from Module 02.\nOUTPUTS: Updated CRM contact object.\nFIELDS UPDATED: telehealth_status, session_link, session_id, platform, scheduled_time.\nSTATUS PROGRESSION: Moves appointment from 'SCHEDULED' to 'TELEHEALTH_READY'.\nUSE CASE: Provider dashboard shows which appointments have telehealth links generated.\nALTERNATES: Swap for Salesforce, Zoho, or custom CRM API.\nERROR HANDLING: If contact_id missing, logs session but skips CRM update."
    },
    {
      "parameters": {
        "operation": "send",
        "from": "={{$env.TWILIO_FROM_NUMBER}}",
        "to": "={{ $('Webhook Trigger - Appointment Confirmed').first().json.body.patient_phone }}",
        "message": "=Hi {{ $json.patient_name.split(' ')[0] }},\n\nYour telehealth appointment is ready!\n\n📅 {{ DateTime.fromISO($json.scheduled_time).toFormat('EEEE, MMMM d') }}\n🕐 {{ DateTime.fromISO($json.scheduled_time).toFormat('h:mm a') }}\n🎥 Provider: {{ $json.provider_name }}\n\n🔗 Join here:\n{{ $json.session_link }}\n\n{{ $json.session_password ? '🔑 Password: ' + $json.session_password : '' }}\n\n⚠️ Join 5 min early to test your connection.\n\nQuestions? Call {{ $env.CLINIC_PHONE }}\n\n- {{ $env.CLINIC_NAME }} Team",
        "options": {}
      },
      "id": "sms-notification-308",
      "name": "Send Patient SMS Reminder",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1.2,
      "position": [1250, 300],
      "credentials": {
        "twilioApi": {
          "id": "{{$env.TWILIO_CREDENTIAL_ID}}",
          "name": "{{$env.TWILIO_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Send SMS to patient with telehealth session link and details.\nINPUTS: Formatted session data + patient phone from Module 02.\nOUTPUTS: Twilio message SID and delivery status.\nCONTENT: Date/time, provider name, clickable join link, password (if required), instructions.\nBEST PRACTICE: Recommends joining 5 min early for tech check.\nSECURITY: Link is unique per session, password included if enabled.\nALTERNATES: Replace with WhatsApp Business API, RCS, or patient portal notification.\nCOMPLIANCE: Ensure SMS consent obtained (TCPA), HIPAA-compliant Twilio account."
    },
    {
      "parameters": {
        "operation": "send",
        "fromEmail": "={{$env.SENDGRID_FROM_EMAIL}}",
        "toEmail": "={{ $json.patient_email }}",
        "subject": "=Your Telehealth Appointment - {{ DateTime.fromISO($json.scheduled_time).toFormat('MMM d, yyyy') }}",
        "emailType": "html",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: {{$env.BRAND_PRIMARY_COLOR || '#4F46E5'}}; color: white; padding: 30px 20px; text-align: center; border-radius: 8px 8px 0 0; }\n    .video-icon { font-size: 48px; margin-bottom: 10px; }\n    .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }\n    .detail-box { background: white; padding: 20px; border-radius: 6px; margin: 20px 0; border-left: 4px solid {{$env.BRAND_PRIMARY_COLOR || '#4F46E5'}}; }\n    .label { font-weight: bold; color: #6b7280; font-size: 14px; margin-bottom: 5px; }\n    .value { color: #111827; font-size: 16px; margin-bottom: 15px; }\n    .join-button { background: {{$env.BRAND_PRIMARY_COLOR || '#4F46E5'}}; color: white; padding: 16px 40px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 20px 0; font-size: 18px; font-weight: bold; }\n    .password-box { background: #fef3c7; border: 2px solid #f59e0b; padding: 15px; border-radius: 6px; margin: 15px 0; }\n    .instructions { background: #e0e7ff; padding: 20px; border-radius: 6px; margin: 20px 0; }\n    .footer { text-align: center; color: #6b7280; font-size: 12px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb; }\n    .tech-check { background: #dcfce7; border-left: 4px solid #10b981; padding: 15px; margin: 15px 0; border-radius: 4px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"video-icon\">🎥</div>\n      <h1>Your Telehealth Appointment</h1>\n    </div>\n    <div class=\"content\">\n      <p>Hi {{ $json.patient_name.split(' ')[0] }},</p>\n      <p>Your telehealth appointment is confirmed and ready to join. Please use the link below at your scheduled time.</p>\n      \n      <div class=\"detail-box\">\n        <div class=\"label\">📅 Date & Time</div>\n        <div class=\"value\" style=\"font-size: 18px; font-weight: bold;\">{{ DateTime.fromISO($json.scheduled_time).toFormat('EEEE, MMMM d, yyyy') }}<br>{{ DateTime.fromISO($json.scheduled_time).toFormat('h:mm a ZZZZ') }}</div>\n        \n        <div class=\"label\">👨‍⚕️ Provider</div>\n        <div class=\"value\">{{ $json.provider_name }}</div>\n        \n        <div class=\"label\">⏱️ Duration</div>\n        <div class=\"value\">{{ $json.duration }} minutes</div>\n        \n        <div class=\"label\">💻 Platform</div>\n        <div class=\"value\">{{ $json.provider }}</div>\n      </div>\n      \n      <div style=\"text-align: center;\">\n        <a href=\"{{ $json.session_link }}\" class=\"join-button\">Join Telehealth Appointment</a>\n      </div>\n      \n      {{ $json.session_password ? '<div class=\"password-box\"><strong>🔑 Meeting Password:</strong> <span style=\"font-size: 20px; font-weight: bold; letter-spacing: 2px;\">' + $json.session_password + '</span></div>' : '' }}\n      \n      <div class=\"tech-check\">\n        <strong>✅ Before Your Appointment:</strong>\n        <ul style=\"margin: 10px 0; padding-left: 20px;\">\n          <li>Join 5 minutes early to test your audio and video</li>\n          <li>Ensure you're in a quiet, private space</li>\n          <li>Have your insurance card and ID ready</li>\n          <li>Test your internet connection (minimum 3 Mbps)</li>\n        </ul>\n      </div>\n      \n      <div class=\"instructions\">\n        <strong>📱 Technical Requirements:</strong>\n        <ul style=\"margin: 10px 0; padding-left: 20px;\">\n          <li><strong>Desktop/Laptop:</strong> Chrome, Firefox, Safari, or Edge browser</li>\n          <li><strong>Mobile:</strong> iOS 12+ or Android 8+</li>\n          <li><strong>Camera & Microphone:</strong> Required and enabled</li>\n          <li><strong>Internet:</strong> Stable broadband connection</li>\n        </ul>\n        <p style=\"margin-top: 15px; font-size: 14px;\">\n          <strong>Having trouble?</strong> Call us at {{ $env.CLINIC_PHONE }} at least 10 minutes before your appointment.\n        </p>\n      </div>\n      \n      <p style=\"margin-top: 30px; font-size: 14px; color: #6b7280;\">\n        <strong>Need to reschedule?</strong><br>\n        Reply to this email or call {{ $env.CLINIC_PHONE }} at least 24 hours in advance.\n      </p>\n      \n      <p style=\"margin-top: 20px; font-size: 14px; color: #6b7280;\">\n        <strong>Session Details:</strong><br>\n        Session ID: {{ $json.session_id }}<br>\n        Appointment ID: {{ $json.appointment_id }}\n      </p>\n    </div>\n    <div class=\"footer\">\n      <p><strong>{{ $env.CLINIC_NAME }}</strong><br>\n      {{ $env.CLINIC_PHONE }} | {{ $env.CLINIC_EMAIL }}</p>\n      <p style=\"margin-top: 15px; font-size: 11px;\">\n        This telehealth session is HIPAA-compliant and encrypted end-to-end.<br>\n        Your privacy and security are our top priorities.\n      </p>\n      <p style=\"margin-top: 10px; font-size: 11px;\">\n        This is an automated message. Please do not reply directly to this email.\n      </p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {
          "ccEmail": "={{$env.SENDGRID_BCC_EMAIL}}"
        }
      },
      "id": "email-notification-309",
      "name": "Send Patient Email Confirmation",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1.1,
      "position": [1250, 400],
      "credentials": {
        "sendGridApi": {
          "id": "{{$env.SENDGRID_CREDENTIAL_ID}}",
          "name": "{{$env.SENDGRID_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Send comprehensive email to patient with telehealth session details and instructions.\nINPUTS: Formatted session data with links and password.\nOUTPUTS: SendGrid message ID and delivery status.\nCONTENT: \n  - Prominent join button with session link\n  - Session password (if required)\n  - Pre-appointment checklist (test tech, quiet space, documents)\n  - Technical requirements (browser, device, internet)\n  - Troubleshooting contact info\nDESIGN: Responsive HTML, branded colors, clear call-to-action.\nSECURITY: HIPAA compliance notice, encryption statement.\nALTERNATES: Swap for Mailgun, AWS SES, or patient portal notification."
    },
    {
      "parameters": {
        "operation": "send",
        "fromEmail": "={{$env.SENDGRID_FROM_EMAIL}}",
        "toEmail": "={{ $json.provider_email }}",
        "subject": "=Telehealth Session Ready - {{ $json.patient_name }} - {{ DateTime.fromISO($json.scheduled_time).toFormat('MMM d, h:mm a') }}",
        "emailType": "html",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: #10b981; color: white; padding: 20px; text-align: center; }\n    .content { background: #f9fafb; padding: 30px; }\n    .detail-box { background: white; padding: 20px; border-radius: 6px; margin: 15px 0; }\n    .start-button { background: #10b981; color: white; padding: 14px 30px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 15px 0; font-weight: bold; }\n    .patient-info { background: #e0e7ff; padding: 15px; border-radius: 6px; margin: 15px 0; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h2>🎥 Telehealth Session Ready</h2>\n    </div>\n    <div class=\"content\">\n      <h3>Appointment Details</h3>\n      <div class=\"patient-info\">\n        <strong>Patient:</strong> {{ $json.patient_name }}<br>\n        <strong>Date/Time:</strong> {{ DateTime.fromISO($json.scheduled_time).toFormat('EEEE, MMMM d, yyyy \\\\at h:mm a') }}<br>\n        <strong>Duration:</strong> {{ $json.duration }} minutes<br>\n        <strong>Platform:</strong> {{ $json.provider }}\n      </div>\n      \n      <div style=\"text-align: center;\">\n        <a href=\"{{ $json.host_link }}\" class=\"start-button\">Start Telehealth Session (Host Link)</a>\n      </div>\n      \n      <div class=\"detail-box\">\n        <strong>Session Information:</strong><br>\n        Session ID: {{ $json.session_id }}<br>\n        Meeting ID: {{ $json.platform_meeting_id }}<br>\n        {{ $json.session_password ? 'Password: ' + $json.session_password : 'No password required' }}\n      </div>\n      \n      <div class=\"detail-box\">\n        <strong>Patient Contact:</strong><br>\n        Email: {{ $json.patient_email }}<br>\n        Appointment ID: {{ $json.appointment_id }}\n      </div>\n      \n      <p style=\"margin-top: 20px; font-size: 14px; color: #6b7280;\">\n        This session is scheduled to start at {{ DateTime.fromISO($json.scheduled_time).toFormat('h:mm a') }}. Please join a few minutes early.\n      </p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "id": "provider-notification-310",
      "name": "Send Provider Email Notification",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1.1,
      "position": [1250, 500],
      "credentials": {
        "sendGridApi": {
          "id": "{{$env.SENDGRID_CREDENTIAL_ID}}",
          "name": "{{$env.SENDGRID_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Notify provider/staff that telehealth session is created and ready.\nINPUTS: Formatted session data with host link.\nOUTPUTS: SendGrid message ID.\nCONTENT: Patient name, appointment time, host/start link, session credentials.\nSECURITY: Host link has elevated permissions (start meeting, admit from waiting room, recording controls).\nUSE CASE: Provider can save link to EMR or calendar for easy access.\nALTERNATES: Replace with Slack notification, Microsoft Teams, or staff dashboard webhook.\nOPTIONAL: Disable if provider receives calendar invite with host link automatically."
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": "={{$env.GOOGLE_SHEET_ID}}",
        "sheetName": "={{$env.GOOGLE_SHEET_TAB_TELEHEALTH || 'Telehealth Sessions'}}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ $now.toISO() }}",
            "session_id": "={{ $json.session_id }}",
            "appointment_id": "={{ $json.appointment_id }}",
            "platform_meeting_id": "={{ $json.platform_meeting_id }}",
            "patient_name": "={{ $json.patient_name }}",
            "patient_email": "={{ $json.patient_email }}",
            "provider_name": "={{ $json.provider_name }}",
            "scheduled_time": "={{ $json.scheduled_time }}",
            "duration": "={{ $json.duration }}",
            "platform": "={{ $json.provider }}",
            "session_link": "={{ $json.session_link }}",
            "host_link": "={{ $json.host_link }}",
            "status": "SCHEDULED",
            "created_at": "={{ $json.created_at }}"
          }
        },
        "options": {}
      },
      "id": "datastore-311",
      "name": "Log Session to Data Store",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [1250, 600],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "{{$env.GOOGLE_SHEETS_CREDENTIAL_ID}}",
          "name": "{{$env.GOOGLE_SHEETS_CREDENTIAL_NAME}}"
        }
      },
      "notes": "PURPOSE: Log telehealth session details for audit trail, analytics, and billing.\nINPUTS: Complete session data with all metadata.\nOUTPUTS: Append confirmation from Google Sheets.\nFIELDS LOGGED: session_id, appointment_id, patient/provider info, links, scheduled time, platform.\nCOMPLIANCE: Maintains record of session creation for HIPAA audit requirements.\nUSE CASE: Analytics on telehealth usage, session completion rates, technical issues.\nALTERNATES: Swap for Airtable, database (PostgreSQL), or EMR integration.\nSECURITY: Links contain sensitive session access - ensure sheet permissions restricted to authorized staff."
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "merge-results-312",
      "name": "Merge All Notifications",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [1450, 400],
      "notes": "PURPOSE: Consolidate outputs from CRM, SMS, emails, and logging into single response.\nINPUTS: CRM update status, SMS delivery, patient email, provider email, data store confirmation.\nOUTPUTS: Unified confirmation object with all delivery metadata.\nUSE CASE: Provides comprehensive delivery report for webhook response and monitoring."
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"message\": \"Telehealth session created successfully\",\n  \"session_id\": $('Format Session Links').first().json.session_id,\n  \"session_link\": $('Format Session Links').first().json.session_link,\n  \"host_link\": $('Format Session Links').first().json.host_link,\n  \"session_password\": $('Format Session Links').first().json.session_password,\n  \"scheduled_time\": $('Format Session Links').first().json.scheduled_time,\n  \"scheduled_time_formatted\": DateTime.fromISO($('Format Session Links').first().json.scheduled_time).toFormat('EEEE, MMMM d, yyyy \\\\at h:mm a'),\n  \"duration\": $('Format Session Links').first().json.duration,\n  \"patient_email\": $('Format Session Links').first().json.patient_email,\n  \"patient_name\": $('Format Session Links').first().json.patient_name,\n  \"provider_name\": $('Format Session Links').first().json.provider_name,\n  \"provider\": $('Format Session Links').first().json.provider,\n  \"platform_meeting_id\": $('Format Session Links').first().json.platform_meeting_id,\n  \"metadata\": {\n    \"crm_updated\": $('Update CRM with Session Details').first().json.id ? true : false,\n    \"patient_sms_sent\": $('Send Patient SMS Reminder').first().json.sid ? true : false,\n    \"patient_email_sent\": $('Send Patient Email Confirmation').first().json.messageId ? true : false,\n    \"provider_email_sent\": $('Send Provider Email Notification').first().json.messageId ? true : false,\n    \"logged\": true,\n    \"sms_sid\": $('Send Patient SMS Reminder').first().json.sid || null,\n    \"patient_email_id\": $('Send Patient Email Confirmation').first().json.messageId || null,\n    \"provider_email_id\": $('Send Provider Email Notification').first().json.messageId || null\n  },\n  \"timestamp\": $now.toISO()\n} }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "success-response-313",
      "name": "Return Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1650, 400],
      "notes": "PURPOSE: Return standardized telehealth_record.json to caller.\nINPUTS: Merged results from all workflow branches.\nOUTPUTS: HTTP 200 with session details, links, and delivery metadata.\nFORMAT: Includes session_id for tracking, patient/host links, password, all delivery statuses.\nINTEGRATION: Output can trigger Module 04 (Pre-Visit Forms) or post-session follow-up workflows.\nSECURITY: Response contains sensitive session links - ensure calling system secures data.\nUSE CASE: Upstream systems can store session_id and links for patient/provider access."
    },
    {
      "parameters": {
        "mode": "passThrough"
      },
      "id": "error-handler-314",
      "name": "Error Handler",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1450, 600],
      "onError": "continueErrorOutput",
      "notes": "PURPOSE: Catch execution errors (API failures, network issues) and prevent workflow crash.\nINPUTS: Any upstream error from telehealth API, CRM, SMS, or email nodes.\nOUTPUTS: Error details for logging service.\nBEST PRACTICE: Connect to error notification workflow or logging service in production.\nRECOVERY: Can trigger fallback actions (e.g., manual session creation alert to staff).\nCRITICAL: If session creation fails, must notify staff immediately to arrange alternative."
    }
  ],
  "connections": {
    "Webhook Trigger - Appointment Confirmed": {
      "main": [
        [
          {
            "node": "Validate Appointment Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Appointment Data": {
      "main": [
        [
          {
            "node": "Prepare Session Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return Validation Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Session Data": {
      "main": [
        [
          {
            "node": "Create Telehealth Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Telehealth Session": {
      "main": [
        [
          {
            "node": "Format Session Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Session Links": {
      "main": [
        [
          {
            "node": "Update CRM with Session Details",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Patient SMS Reminder",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Patient Email Confirmation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Provider Email Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Session to Data Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update CRM with Session Details": {
      "main": [
        [
          {
            "node": "Merge All Notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Patient SMS Reminder": {
      "main": [
        [
          {
            "node": "Merge All Notifications",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Send Patient Email Confirmation": {
      "main": [
        [
          {
            "node": "Merge All Notifications",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Send Provider Email Notification": {
      "main": [
        [
          {
            "node": "Merge All Notifications",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Log Session to Data Store": {
      "main": [
        [
          {
            "node": "Merge All Notifications",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Merge All Notifications": {
      "main": [
        [
          {
            "node": "Return Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "{{$env.ERROR_WORKFLOW_ID}}"
  },
  "staticData": null,
  "tags": [
    {
      "name": "Aigent",
      "id": "aigent-module"
    },
    {
      "name": "Clinic-Template",
      "id": "clinic-template"
    },
    {
      "name": "Telehealth",
      "id": "telehealth"
    },
    {
      "name": "Video-Session",
      "id": "video-session"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-29T00:00:00.000Z",
  "versionId": "1.0.0",
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "{{$env.N8N_INSTANCE_ID}}",
    "description": "Aigent Universal Clinic Template - Module 03: Telehealth Session. Accepts confirmed appointment from Module 02, creates secure telehealth session (Zoom/Doxy.me/Amwell), sends patient SMS and email with join link, notifies provider, updates CRM, logs session details. Returns standardized telehealth_record.json for downstream modules.",
    "author": "Aigent Automation Engineering",
    "version": "1.0.0",
    "license": "Proprietary - Aigent Company",
    "documentation": "https://docs.aigent.company/templates/module-03",
    "dependencies": {
      "required_upstream": ["Aigent_Module_02_Consult_Booking"],
      "optional_downstream": ["Aigent_Module_04_PreVisit_Forms", "Aigent_Module_05_Post_Session_Followup"]
    }
  }
}
